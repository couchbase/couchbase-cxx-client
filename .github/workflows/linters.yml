name: linters
permissions: {}

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
      - release-*

env:
  LLVM_VERSION: 20

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  clang_format:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget gnupg2 git
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor --output /etc/apt/keyrings/llvm-snapshot.gpg
          sudo bash -c "echo 'deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${LLVM_VERSION} main' >> /etc/apt/sources.list"
          sudo apt-get update -y
          sudo apt-get install -y clang-format-${LLVM_VERSION}
      - name: Run clang-format
        run: ./bin/check-clang-format
        env:
          CB_GIT_CLANG_FORMAT: /usr/bin/git-clang-format-${{ env.LLVM_VERSION }}
          CB_CLANG_FORMAT: /usr/bin/clang-format-${{ env.LLVM_VERSION }}

  clang_static_analyzer:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev cmake curl wget gnupg2
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor --output /etc/apt/keyrings/llvm-snapshot.gpg
          sudo bash -c "echo 'deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${LLVM_VERSION} main' >> /etc/apt/sources.list"
          sudo apt-get update -y
          sudo apt-get install -y clang-${LLVM_VERSION} clang-tools-${LLVM_VERSION}
      - name: Run scan build
        run: ./bin/check-clang-static-analyzer
        env:
          CB_CC: /usr/bin/clang-${{ env.LLVM_VERSION }}
          CB_CXX: /usr/bin/clang++-${{ env.LLVM_VERSION }}
          CB_SCAN_BUILD: /usr/bin/scan-build-${{ env.LLVM_VERSION }}
      - name: Upload scan-build report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: cmake-build-report.tar.gz

  cppcheck:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev cmake curl wget gnupg2 cppcheck
      - name: Run cppcheck
        run: ./bin/check-cppcheck

  clang_tidy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev cmake curl wget gnupg2
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor --output /etc/apt/keyrings/llvm-snapshot.gpg
          sudo bash -c "echo 'deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${LLVM_VERSION} main' >> /etc/apt/sources.list"
          sudo apt-get update -y
          sudo apt-get install -y clang-${LLVM_VERSION} clang-tidy-${LLVM_VERSION} clang-tools-${LLVM_VERSION}
      - name: Run clang-tidy
        run: ./bin/check-clang-tidy
        env:
          CB_CC: /usr/bin/clang-${{ env.LLVM_VERSION }}
          CB_CXX: /usr/bin/clang++-${{ env.LLVM_VERSION }}

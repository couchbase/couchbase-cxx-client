name: create-cluster
description: Sets up a Couchbase cluster using cbdinocluster
inputs:
  version:
    description: 'Couchbase Server version to use'
    required: true
  suite:
    description: 'Test suite the cluster is being created for'
    required: true
outputs:
  ip:
    description: 'The IP address of a node of the cluster'
    value: ${{ steps.start-cluster.outputs.ip }}
  connstr:
    description: 'Connection string to connect to the cluster'
    value: ${{ steps.start-cluster.outputs.connstr }}
  tls-connstr:
    description: 'Connection string to connect to the cluster over TLS'
    value: ${{ steps.start-cluster.outputs.tls-connstr }}
  id:
    description: 'The cbdinocluster ID of the created cluster'
    value: ${{ steps.start-cluster.outputs.id }}
runs:
  using: composite
  steps:
    - name: Install cbdinocluster
      shell: bash
      run: |
        mkdir -p "$HOME/bin"
        wget -nv -O $HOME/bin/cbdinocluster https://github.com/couchbaselabs/cbdinocluster/releases/download/v0.0.86/cbdinocluster-linux-amd64
        chmod +x $HOME/bin/cbdinocluster
        echo "$HOME/bin" >> $GITHUB_PATH
    - name: Initialize cbdinocluster
      shell: bash
      run: |
        cbdinocluster -v init --auto
    - name: Start Couchbase cluster
      id: start-cluster
      shell: bash
      env:
        CLUSTER_CONFIG: |
          nodes:
            - count: 1
              version: ${{ inputs.version }}
              services: [kv, n1ql, index]
            - count: 1
              version: ${{ inputs.version }}
              services: [kv, fts]
            - count: 1
              version: ${{ inputs.version }}
              services: [kv, cbas, eventing]
          docker:
            kv-memory: 2048
            fts-memory: 2048
          expiry: 4h
      run: |
        CBDC_ID=$(cbdinocluster -v alloc --def="${CLUSTER_CONFIG}")
        echo "CBDC_ID=$CBDC_ID" >> "$GITHUB_ENV"
        echo "ip=$(cbdinocluster -v ip $CBDC_ID)" >> "$GITHUB_OUTPUT"
        echo "connstr=$(cbdinocluster -v connstr --no-tls $CBDC_ID)" >> "$GITHUB_OUTPUT"
        echo "tls-connstr=$(cbdinocluster -v connstr --tls $CBDC_ID)" >> "$GITHUB_OUTPUT"
        echo "id=$CBDC_ID" >> "$GITHUB_OUTPUT"
        cbdinocluster certificates get-ca $CBDC_ID >> "$GITHUB_WORKSPACE/cluster.crt"
    - name: Add default bucket
      shell: bash
      run: |
        cbdinocluster buckets add $CBDC_ID default --ram-quota-mb 100
    - name: Add second bucket for transactions
      shell: bash
      if: ${{ inputs.suite == 'transaction' }}
      run: |
        cbdinocluster buckets add $CBDC_ID secBucket --ram-quota-mb 100
    - name: Load travel-sample bucket
      shell: bash
      if: ${{ inputs.suite == 'unit' }}
      run: |
        cbdinocluster buckets load-sample $CBDC_ID travel-sample
